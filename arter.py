# ¬©Ô∏è nnnrodnoy, 2025
# üí¨ @nnnrodnoy
# This file is part of Huekka
# üåê https://github.com/nnnrodnoy/Huekka/
# You can redistribute it and/or modify it under the terms of the MIT License
# üîë https://opensource.org/licenses/MIT
import os
import re
import random
from pathlib import Path
from config import BotConfig

def convert_color(match):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ü–≤–µ—Ç–Ω—ã–µ –±–ª–æ–∫–∏ –≤ ANSI escape sequences"""
    hex_color = match.group(1).lower()
    text = match.group(2)
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Ñ–æ–Ω–∞ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
    for char in BotConfig.ARTER['background_chars']:
        text = text.replace(char, ' ')
    return f"\033[38;2;{int(hex_color[0:2], 16)};{int(hex_color[2:4], 16)};{int(hex_color[4:6], 16)}m{text}"

def print_random_art():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–π ASCII –∞—Ä—Ç –∏–∑ –ø–∞–ø–∫–∏ arts"""
    arts_dir = Path("arts")
    if not arts_dir.exists():
        return False
        
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ txt —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ arts
    art_files = list(arts_dir.glob("*.txt"))
    if not art_files:
        return False
        
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–π–ª
    art_file = random.choice(art_files)
    
    try:
        with open(art_file, 'r', encoding='utf-8') as f:
            for line in f:
                # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
                stripped_line = line.rstrip('\n')
                # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–≥–∏, –∫—Ä–æ–º–µ —Ü–≤–µ—Ç–æ–≤—ã—Ö
                stripped_line = re.sub(r'\[(?!color)[^]]*\]', '', stripped_line)
                stripped_line = re.sub(r'\[/color\]', '', stripped_line)
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏
                stripped_line = re.sub(
                    r'\[color=#([0-9a-f]{6})\](.*?)(?=\[color=|$)',
                    convert_color,
                    stripped_line,
                    flags=re.IGNORECASE
                )
                
                # –ó–∞–º–µ–Ω—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã —Ñ–æ–Ω–∞
                for char in BotConfig.ARTER['background_chars']:
                    stripped_line = stripped_line.replace(char, ' ')
                
                # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –∞—Ä—Ç–∞
                print(stripped_line + "\033[0m")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ä—Ç–∞: {str(e)}")
        return False

def print_specific_art(art_name):
    """–í—ã–≤–æ–¥–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞—Ä—Ç –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    art_path = Path("arts") / f"{art_name}.txt"
    if not art_path.exists():
        return False
        
    try:
        with open(art_path, 'r', encoding='utf-8') as f:
            for line in f:
                # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
                stripped_line = line.rstrip('\n')
                # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–≥–∏, –∫—Ä–æ–º–µ —Ü–≤–µ—Ç–æ–≤—ã—Ö
                stripped_line = re.sub(r'\[(?!color)[^]]*\]', '', stripped_line)
                stripped_line = re.sub(r'\[/color\]', '', stripped_line)
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏
                stripped_line = re.sub(
                    r'\[color=#([0-9a-f]{6})\](.*?)(?=\[color=|$)',
                    convert_color,
                    stripped_line,
                    flags=re.IGNORECASE
                )
                
                # –ó–∞–º–µ–Ω—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã —Ñ–æ–Ω–∞
                for char in BotConfig.ARTER['background_chars']:
                    stripped_line = stripped_line.replace(char, ' ')
                
                # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –∞—Ä—Ç–∞
                print(stripped_line + "\033[0m")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ä—Ç–∞: {str(e)}")
        return False
