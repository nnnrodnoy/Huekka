# ¬©Ô∏è nnnrodnoy, 2025
# üí¨ @nnnrodnoy
# This file is part of Huekka
# üåê https://github.com/nnnrodnoy/Huekka/
# You can redistribute it and/or modify it under the terms of the MIT License
# üîë https://opensource.org/licenses/MIT
import logging
import os
import re
from pathlib import Path
from telethon import events
from config import BotConfig

logger = logging.getLogger("UserBot.Configurator")

class ConfiguratorModule:
    def __init__(self, bot):
        self.bot = bot
        
        bot.register_command(
            cmd="config",
            handler=self.config_handler,
            description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞",
            module_name="Configurator"
        )
        
        bot.set_module_description("Configurator", "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞")

    def get_module_info(self):
        return {
            "name": "Configurator",
            "description": "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞",
            "developer": "@BotHuekka",
            "version": "1.0.0",
            "commands": [
                {
                    "command": "config",
                    "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞"
                }
            ]
        }

    async def config_handler(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .config"""
        args = event.text.split()
        
        if len(args) < 2:
            await self.show_help(event)
            return
        
        subcommand = args[1].lower()
        
        if subcommand == "prefix" and len(args) > 2:
            await self.set_prefix(event, args[2])
        elif subcommand == "autoclean" and len(args) > 2:
            await self.set_autoclean(event, args[2].lower())
        elif subcommand == "autoclean_delay" and len(args) > 2:
            await self.set_autoclean_delay(event, args[2])
        elif subcommand == "autostart" and len(args) > 2:
            await self.set_autostart(event, args[2].lower())
        elif subcommand == "status":
            await self.show_status(event)
        else:
            await self.show_help(event)

    async def show_help(self, event):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ config"""
        prefix = self.bot.command_prefix
        
        help_text = f"""
<emoji document_id=5370932688993656500>‚öôÔ∏è</emoji> <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞</b>

<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>
 <emoji document_id=5251522431977291010>‚ñ™Ô∏è</emoji><code>{prefix}config prefix</code> <code>&lt;–Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å&gt;</code> - <i>–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥</i>
 <emoji document_id=5251522431977291010>‚ñ™Ô∏è</emoji><code>{prefix}config autoclean</code> <code>&lt;on/off&gt;</code> - <i>–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä</i>
 <emoji document_id=5251522431977291010>‚ñ™Ô∏è</emoji><code>{prefix}config autoclean_delay</code> <code>&lt;—Å–µ–∫—É–Ω–¥—ã&gt;</code> - <i>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä–∞</i>
 <emoji document_id=5251522431977291010>‚ñ™Ô∏è</emoji><code>{prefix}config autostart</code> <code>&lt;on/off&gt;</code> - <i>–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫</i>
 <emoji document_id=5251522431977291010>‚ñ™Ô∏è</emoji><code>{prefix}config status</code> - <i>–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</i>

<b>–ü—Ä–∏–º–µ—Ä—ã:</b>
<emoji document_id=5251481573953405172>‚ñ´Ô∏è</emoji> <code>{prefix}config prefix !</code> - <i>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å "!"</i>
<emoji document_id=5251481573953405172>‚ñ´Ô∏è</emoji> <code>{prefix}config autoclean on</code> - <i>–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä</i>
<emoji document_id=5251481573953405172>‚ñ´Ô∏è</emoji> <code>{prefix}config autoclean_delay 3600</code> - <i>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É 1 —á–∞—Å</i>
<emoji document_id=5251481573953405172>‚ñ´Ô∏è</emoji> <code>{prefix}config autostart on</code> - <i>–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫</i>
"""
        await event.edit(help_text)

    async def set_prefix(self, event, new_prefix):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥"""
        if not new_prefix or len(new_prefix) > 3:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 3 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
            return
        
        if ' ' in new_prefix:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã!</b>")
            return
        
        success = self.bot.db.set_config_value('command_prefix', new_prefix)
        
        if success:
            self.bot.command_prefix = new_prefix
            await event.edit(f"<emoji document_id=5206607081334906820>‚úÖ</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:</b> <code>{new_prefix}</code>")
        else:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞!</b>")

    async def set_autoclean(self, event, state):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä"""
        if state not in ['on', 'off']:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> <code>on</code> <b>–∏–ª–∏</b> <code>off</code>")
            return
        
        enabled = state == 'on'
        
        success = self.bot.db.set_config_value('autoclean_enabled', str(enabled))
        
        if success:
            self.bot.autocleaner.update_settings(enabled=enabled)
            
            status = "–≤–∫–ª—é—á–µ–Ω" if enabled else "–≤—ã–∫–ª—é—á–µ–Ω"
            await event.edit(f"<emoji document_id=5206607081334906820>‚úÖ</emoji> <b>–ê–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä</b> {status}!")
        else:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä–∞!</b>")

    async def set_autoclean_delay(self, event, delay_str):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä–∞"""
        try:
            delay = int(delay_str)
            
            if delay < 10:
                await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–µ–∫—É–Ω–¥!</b>")
                return
            
            if delay > 86400:  # 24 —á–∞—Å–∞
                await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 24 —á–∞—Å–∞ (86400 —Å–µ–∫—É–Ω–¥)!</b>")
                return
            
            success = self.bot.db.set_config_value('autoclean_delay', str(delay))
            
            if success:
                self.bot.autocleaner.update_settings(delay=delay)
                
                if delay < 60:
                    time_str = f"{delay} —Å–µ–∫—É–Ω–¥"
                elif delay < 3600:
                    minutes = delay // 60
                    time_str = f"{minutes} –º–∏–Ω—É—Ç"
                else:
                    hours = delay // 3600
                    time_str = f"{hours} —á–∞—Å–æ–≤"
                
                await event.edit(f"<emoji document_id=5206607081334906820>‚úÖ</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:</b> {time_str}")
            else:
                await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–¥–µ—Ä–∂–∫–∏!</b>")
                
        except ValueError:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º!</b>")

    async def set_autostart(self, event, state):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if state not in ['on', 'off']:
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b> <code>on</code> <b>–∏–ª–∏</b> <code>off</code>")
            return
        
        enabled = state == 'on'
        
        bot_dir = os.getcwd()
        startup_cmd = f"cd {bot_dir} && ./start_bot.sh\n"  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç

        
        bashrc_path = Path.home() / ".bashrc"
        
        try:
            if enabled:
                with open(bashrc_path, 'a+') as f:
                    f.seek(0)
                    content = f.read()
                    if startup_cmd not in content:
                        f.write(f"\n# –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Huekka UserBot\n{startup_cmd}")
            else:
                if bashrc_path.exists():
                    with open(bashrc_path, 'r') as f:
                        lines = f.readlines()
                    
                    new_lines = []
                    skip_next = False
                    
                    for line in lines:
                        if skip_next:
                            skip_next = False
                            continue
                            
                        if "# –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Huekka UserBot" in line:
                            skip_next = True
                            continue
                            
                        if startup_cmd in line:
                            continue
                            
                        new_lines.append(line)
                    
                    with open(bashrc_path, 'w') as f:
                        f.writelines(new_lines)
            
            success = self.bot.db.set_config_value('autostart_enabled', str(enabled))
            
            if success:
                status = "–≤–∫–ª—é—á–µ–Ω" if enabled else "–≤—ã–∫–ª—é—á–µ–Ω"
                await event.edit(f"<emoji document_id=5206607081334906820>‚úÖ</emoji> <b>–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫</b> {status}!")
            else:
                await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞!</b>")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞: {str(e)}")
            await event.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞!</b>")

    async def show_status(self, event):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        prefix = self.bot.db.get_config_value('command_prefix', '.')
        autoclean_enabled = self.bot.db.get_config_value('autoclean_enabled', 'True').lower() == 'true'
        autoclean_delay = int(self.bot.db.get_config_value('autoclean_delay', '1800'))
        autostart_enabled = self.bot.db.get_config_value('autostart_enabled', 'False').lower() == 'true'
        
        if autoclean_delay < 60:
            delay_str = f"{autoclean_delay} —Å–µ–∫—É–Ω–¥"
        elif autoclean_delay < 3600:
            minutes = autoclean_delay // 60
            delay_str = f"{minutes} –º–∏–Ω—É—Ç"
        else:
            hours = autoclean_delay // 3600
            delay_str = f"{hours} —á–∞—Å–æ–≤"
        
        autoclean_status = "<emoji document_id=5206607081334906820>‚úÖ</emoji> –í–∫–ª—é—á–µ–Ω" if autoclean_enabled else "<emoji document_id=5210952531676504517>‚ùå</emoji> –í—ã–∫–ª—é—á–µ–Ω"
        autostart_status = "<emoji document_id=5206607081334906820>‚úÖ</emoji> –í–∫–ª—é—á–µ–Ω" if autostart_enabled else "<emoji document_id=5210952531676504517>‚ùå</emoji> –í—ã–∫–ª—é—á–µ–Ω"
        
        status_text = f"""
<emoji document_id=5370932688993656500>‚öôÔ∏è</emoji> <b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</b>

<b>–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥:</b> <code>{prefix}</code>
<emoji document_id=5251481573953405172>‚ñ™Ô∏è</emoji> <b>–ê–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä:</b> {autoclean_status}
<emoji document_id=5251481573953405172>‚ñ™Ô∏è</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ–∫–ª–∏–Ω–µ—Ä–∞:</b> {delay_str}
<emoji document_id=5251481573953405172>‚ñ™Ô∏è</emoji> <b>–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫:</b> {autostart_status}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>{prefix}config help</code> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
"""
        await event.edit(status_text)

def get_module_info():
    return {
        "name": "Configurator",
        "description": "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞",
        "developer": "@BotHuekka",
        "version": "1.0.0",
        "commands": [
            {
                "command": "config",
                "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞"
            }
        ]
    }

def setup(bot):
    ConfiguratorModule(bot)
