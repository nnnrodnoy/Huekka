# ¬©Ô∏è nnnrodnoy, 2025
# üí¨ @nnnrodnoy
# This file is part of Huekka
# üåê https://github.com/nnnrodnoy/Huekka/
# You can redistribute it and/or modify it under the terms of the MIT License
# üîë https://opensource.org/licenses/MIT
import os
import logging
import time
from pathlib import Path
from telethon import events
from telethon.tl.types import MessageEntityCustomEmoji
from telethon.errors import MessageNotModifiedError
from config import BotConfig
from core.formatters import text, msg

logger = logging.getLogger("UserBot.Huekka")

class HuekkaModule:
    def __init__(self, bot):
        self.bot = bot
        
        base_dir = Path(__file__).resolve().parent.parent
        
        self.image_path = base_dir / "asset" / "image" / "huekka.png"
        self.clock_emoji_id = BotConfig.EMOJI_IDS["clock"]
        
        bot.register_command(
            cmd="huekka",
            handler=self.cmd_huekka,
            description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ",
            module_name="Huekka"
        )
        
        bot.register_command(
            cmd="ping",
            handler=self.cmd_ping,
            description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞",
            module_name="Huekka"
        )
        
        bot.register_command(
            cmd="setamoji",
            handler=self.cmd_setamoji,
            description="–ü–æ–ª—É—á–∏—Ç—å –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –ø—Ä–µ–º–∏—É–º-—ç–º–æ–¥–∑–∏",
            module_name="Huekka"
        )
        
        bot.register_command(
            cmd="online",
            handler=self.cmd_online,
            description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞",
            module_name="Huekka"
        )
        
        bot.set_module_description("Huekka", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ Huekka –∏ —Ä–∞–±–æ—Ç–∞ —Å —ç–º–æ–¥–∑–∏")
        
        logger.info(f"–ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: {self.image_path}")
        logger.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {self.image_path.exists()}")

    async def cmd_huekka(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .huekka"""
        try:
            if not self.image_path.exists():
                error_msg = f"[üö´](emoji/5240241223632954241) –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –ø—É—Ç–∏: {self.image_path}\n"
                error_msg += f"–¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {Path.cwd()}\n"
                error_msg += f"–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {self.image_path.resolve()}\n"
                error_msg += f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏."
                await event.edit(error_msg)
                return
            
            message_text = (
                f"**[üåë](emoji/5370932688993656500) Huekka** - __Version__ __ {BotConfig.VERSION}__\n\n"
                f"**[‚ÑπÔ∏è](emoji/5377520790868603876) GitHub**: __[Huekka]({BotConfig.GITHUB_URL})__\n"
                f"**[‚ÑπÔ∏è](emoji/5377520790868603876) Channel**: __[Huekka](https://t.me/BotHuekka)__"
            )
            
            await event.delete() 
            await self.bot.client.send_file(
                event.chat_id,
                self.image_path,
                caption=message_text,
                reply_to=event.reply_to_msg_id
            )
            
        except Exception as e:
            error_msg = f"[üö´](emoji/5240241223632954241) **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:** {str(e)}"
            await event.edit(error_msg)
            logger.error(f"**–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ** '.huekka:' {str(e)}")

    async def cmd_ping(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .ping"""
        current_time = time.time()
        message_time = event.message.date.timestamp()
        ping_time = round((current_time - message_time) * 1000, 2)
        
        await event.edit(f"[‚ñ´Ô∏è](emoji/5370932688993656500) **—Å–µ–π—á–∞—Å –ø–∏–Ω–≥** - `{ping_time}ms`")

    async def cmd_setamoji(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .setamoji - –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–µ–º–∏—É–º-—ç–º–æ–¥–∑–∏"""
        reply = await event.get_reply_message()
        if not reply:
            await event.edit("[‚ùå](emoji/5210952531676504517) **–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–º–∏—É–º-—ç–º–æ–¥–∑–∏!**")
            return
            
        if not reply.entities:
            await event.edit("[‚ùå](emoji/5210952531676504517) **–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º-—ç–º–æ–¥–∑–∏!**")
            return
            
        custom_emojis = []
        for entity in reply.entities:
            if isinstance(entity, MessageEntityCustomEmoji):
                emoji_char = reply.message[entity.offset:entity.offset + entity.length]
                custom_emojis.append((emoji_char, entity.document_id))
        
        if not custom_emojis:
            await event.edit("[‚ùå](emoji/5210952531676504517) **–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º-—ç–º–æ–¥–∑–∏!**")
            return
            
        result = "[‚ñ™Ô∏è](emoji/5818774589714468177) **Premium-Amoji:**\n\n"
        
        for i, (emoji_char, doc_id) in enumerate(custom_emojis, 1):
            result += f"**1.** `MARKDOWN` - `[{emoji_char}](emoji/{doc_id})`\n\n"
            result += f"**2.** `HTML` - `<emoji document_id={doc_id}>{emoji_char}</emoji>`\n"
        
        await event.edit(result)

    async def is_premium_user(self, event):
        try:
            user = await event.get_sender()
            return user.premium if hasattr(user, 'premium') else False
        except Exception:
            return False

    async def add_to_autoclean(self, message):
        try:
            if hasattr(self.bot, 'autocleaner') and self.bot.autocleaner.enabled:
                await self.bot.autocleaner.schedule_cleanup(message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É: {str(e)}")

    async def cmd_online(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .online"""
        try:
            is_premium = await self.is_premium_user(event)
            uptime = text.format_time(time.time() - self.bot.start_time)
            
            if is_premium:
                msg_text = f"[üïí](emoji/{self.clock_emoji_id}) **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** `{uptime}`"
            else:
                msg_text = f"üïí **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** `{uptime}`"
            
            msg_obj = await event.edit(msg_text)
            await self.add_to_autoclean(msg_obj)
        except MessageNotModifiedError:
            pass
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ .online: {str(e)}")

    def get_module_info(self):
        return {
            "name": "Huekka",
            "description": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ Huekka –∏ —Ä–∞–±–æ—Ç–∞ —Å —ç–º–æ–¥–∑–∏",
            "developer": "@BotHuekka",
            "version": "1.0.0",
            "commands": [
                {
                    "command": "huekka",
                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"
                },
                {
                    "command": "ping",
                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞"
                },
                {
                    "command": "setamoji",
                    "description": "–ü–æ–ª—É—á–∏—Ç—å id premium-amoji"
                },
                {
                    "command": "online",
                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"
                }
            ]
        }

def get_module_info():
    return {
        "name": "Huekka",
        "description": "Huekka tools module ",
        "developer": "@BotHuekka",
        "version": "1.0.0",
        "commands": [
            {
                "command": "huekka",
                "description": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"
            },
            {
                "command": "ping",
                "description": "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞"
            },
            {
                "command": "setamoji",
                "description": "–ü–æ–ª—É—á–∏—Ç—å id premium-amoji"
            },
            {
                "command": "online",
                "description": "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"
            }
        ]
    }

def setup(bot):
    HuekkaModule(bot)
